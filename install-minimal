#!/usr/bin/env sh

set -eu

. /etc/os-release
cat /etc/os-release
echo
echo ============================================
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo "$ID | ${VERSION_ID:- - } | ${PRETTY_NAME:- - }"
echo ============================================
echo

# SUDO is only set, if sudo is actually installed!
SUDO=$(command -v sudo || true)

main() {
	get_packages_to_install
	install_packages
	install_git_extras_from_sources
	set_max_user_watches
}

set_max_user_watches() {
	if [ -d /etc/sysctl.d/ ]; then
		# each watch needs up to 1080 bytes (https://code.visualstudio.com/docs/setup/linux#_visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc)
		echo 'fs.inotify.max_user_watches=196608' | $SUDO tee /etc/sysctl.d/10_max_user_watches >/dev/null
		$SUDO sysctl -p || true # ignore error
	fi
}

get_packages_to_install() {
	PACKAGES="bash bash-completion curl diffutils git gnupg htop jq make patch procps qrencode rsync tmux util-linux wget zsh"
}

install_packages() {
	# evaluates the package manager
	PKG_MANAGER_PATH=$({ command -v apk || command -v apt || command -v dnf || command -v yum || command -v zypper || command -v pacman; })

	# /usr/bin/dnf -> dnf
	PKG_MANAGER=${PKG_MANAGER_PATH##*/}

	case "$PKG_MANAGER" in
	apk)
		PACKAGES=$(echo $PACKAGES | sed -r -e 's/\<qrencode\>/libqrencode/')
		$SUDO apk update
		$SUDO apk add $PACKAGES vim libffi
		;;

	apt)
		apt update
		if [ "$ID" = "ubuntu" ] && [ "$VERSION_ID" = "20.04" ]; then
			$SUDO apt -y install $PACKAGES bsdmainutils vim
		else
			$SUDO apt -y install $PACKAGES bsdmainutils vim exa
		fi
		;;

	dnf)
		if [ "$ID" = "fedora" ]; then
			$SUDO dnf -y install $PACKAGES neovim exa
		elif [ "$ID" = "centos" ]; then
			$SUDO dnf -y install epel-release
			$SUDO dnf -y install $PACKAGES vim
		else
			$SUDO dnf -y install $PACKAGES vim
		fi
		;;

	pacman)
		$SUDO pacman -Sy --noconfirm $PACKAGES vim
		;;

	zypper)
		$SUDO zypper install -y $PACKAGES vim
		;;

	*)
		echo "Fatal Error: No supported package manager found!"
		exit 1
		;;

	esac
}

install_git_extras_from_sources() {
	TEMP_DIR=$(mktemp -d /tmp/git-extras.XXXXXX)
	git clone https://github.com/tj/git-extras.git $TEMP_DIR
	cd $TEMP_DIR
	# checkout the latest tag
	git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
	$SUDO make install
}

main "$@"
